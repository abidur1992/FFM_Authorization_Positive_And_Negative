{
	"info": {
		"_postman_id": "205f7512-e6be-43f5-9385-eb450ffdbd14",
		"name": "5_FFME2-14_Company_admin_should_be_able_to_register_app_user_from_admin_panel",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PositiveTest",
			"item": [
				{
					"name": "FFME2-14 Company admin should be able to register app user from admin panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13c5aee2-c112-49ec-b2de-43d30e9cbe52",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//generating Schema",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": \"Successfully registered.\",",
									"            \"status\": \"success\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"Successfully registered.\"",
									"            ]",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"success\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"",
									"//Scema Validation Test",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin should be able to register app user from admin panel so that they can login.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\nExpected Result:\n{\n    \"message\": \"Successfully registered.\",\n    \"status\": \"success\"\n}\n\nActual Result:\n{\n    \"message\": \"Successfully registered.\",\n    \"status\": \"success\"\n}\n\nStatus Code: 201 CREATED\nTest Result: Pass\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "NegativeTest",
			"item": [
				{
					"name": "FFME2-14-1 Company admin shouldn't be able to register with empty required field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7c080bf-13a7-421f-8176-ff52d374bb3c",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"iso_code must be non-empty\",",
									"                \"company_id must be non-empty\",",
									"                \"first_name must be non-empty\",",
									"                \"last_name must be non-empty\",",
									"                \"nid must be non-empty\",",
									"                \"designation must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"iso_code must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"iso_code must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"\",\n\n\"nid\":\"\",\n\n\"designation\":\"\",\n\n\"department\":\"\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result by leaving all required information empty. \n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"\",\n\n\"nid\":\"\",\n\n\"designation\":\"\",\n\n\"department\":\"\"\n\n}\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"iso_code must be non-empty\",\n        \"company_id must be non-empty\",\n        \"first_name must be non-empty\",\n        \"last_name must be non-empty\",\n        \"nid must be non-empty\",\n        \"designation must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"iso_code must be non-empty\",\n        \"company_id must be non-empty\",\n        \"first_name must be non-empty\",\n        \"last_name must be non-empty\",\n        \"nid must be non-empty\",\n        \"designation must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-2 Company admin shouldn't be able to register with empty phone_number field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf1f43e1-160b-47c8-a03a-a620fa490828",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result by leaving phone_number filed empty. \n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-3 Company admin shouldn't be able to register without phone_numbe and company_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8c01723-bb89-4154-8f8e-05db328b1073",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with empty phone_numbe and empty company_id.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-4 Company admin shouldn't be able to register without phone_numbe and iso_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a6b2077-4ef6-47d8-b78c-7673c7728617",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"iso_code must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"iso_code must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"iso_code must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with empty phone_numbe and empty iso_code.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-5 Company admin shouldn't be able to register without phone_numbe and first_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c88c746-e70e-428d-8781-765496b453b5",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with empty phone_numbe and empty first_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-6 Company admin shouldn't be able to register without phone_numbe and last_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce825392-7ece-4c7b-b5fc-55ac8c394453",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with empty phone_numbe and empty last_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-7 Company admin shouldn't be able to register without phone_numbe and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89476165-956b-450d-8697-b8dd5995cb27",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with empty phone_numbe and empty nid.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-8 Company admin shouldn't be able to register without phone_numbe and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "817aeff3-7b4e-498e-a9b4-e0ebe5716029",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with empty phone_numbe and empty designation.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-9 Company admin shouldn't be able to register without phone_numbe and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "824d6b6c-08ca-490f-83d8-87f080a58e1a",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with empty phone_numbe and empty department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-10 Company admin shouldn't be able to register without company_id ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2864c1b8-40e3-419c-aad1-6e5d726ab60a",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with without company_id.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-11 Company admin shouldn't be able to register without company_id and iso_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47094ff0-6778-414c-9df7-7a9307a7d68e",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with without company_id and iso_code.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-12 Company admin shouldn't be able to register without company_id and first_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbba4ca3-1dee-456a-ab22-abe4da353e2d",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with without company_id and first_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-13 Company admin shouldn't be able to register without company_id and last_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7aeee028-7a07-4e10-ae52-ecec4baec6da",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with without company_id and last_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-15 Company admin shouldn't be able to register without company_id and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8245abbe-4218-419b-bc1b-2969bf03f309",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with without company_id and designation.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-16 Company admin shouldn't be able to register without company_id and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d564d899-c271-4c3c-8fdc-57b8a9545825",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register with without company_id and department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-17 Company admin shouldn't be able to register without iso_code ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eebff3de-0e46-4054-8ead-e6e0f3f579da",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without iso_code.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-18 Company admin shouldn't be able to register without iso_code and first_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6b2906e-59b3-456b-bcfd-b87f9d88cd22",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without iso_code and first_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-19 Company admin shouldn't be able to register without iso_code and last_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72e686d5-aabc-463f-91ad-f60ef93ceb6b",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without iso_code and last_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-20 Company admin shouldn't be able to register without iso_code and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e76b618-9020-4b60-9fa7-0dcd9e8ff8a5",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without iso_code and nid.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-21 Company admin shouldn't be able to register without iso_code and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfd43140-3b5a-4328-83cc-a3c615aa8581",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without iso_code and designation.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-22 Company admin shouldn't be able to register without iso_code and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78dd8af4-4530-4c04-b7b4-1481b6b2df75",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without iso_code and department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"Qa\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-23 Company admin shouldn't be able to register without first_name ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9bd5ec96-441b-4749-9242-79d14c96697e",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without first_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"Qa\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-24 Company admin shouldn't be able to register without first_name and last_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a26bf9a7-6417-4fd5-95a0-c8e4a1223960",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without first_name and last_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"Qa\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-25 Company admin shouldn't be able to register without first_name and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f05c104-0e80-450e-b48f-65560d390a25",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without first_name and nid.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-26 Company admin shouldn't be able to register without first_name and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d9a713e-1ccb-407a-8d8f-314f326acac7",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without first_name and designation.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-27 Company admin shouldn't be able to register without first_name and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d79991f6-b56a-4d4c-a4d3-7a6ceb276d9c",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without first_name and department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"first_name must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-28 Company admin shouldn't be able to register without last_name ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25ad0070-4b8e-46aa-9c8f-9deb67ad0826",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without last_name.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-29 Company admin shouldn't be able to register without last_name and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da8b7911-6d5b-48c7-b787-a8b7bb8c677c",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without last_name and nid.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\",\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-30 Company admin shouldn't be able to register without last_name and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4375f6e3-4919-492d-b83a-6291976dfeb8",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without last_name and designation.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-31 Company admin shouldn't be able to register without last_name and department ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2e2fd76-7d54-4841-a6b6-7f72c86f6e0f",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without last_name and department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"last_name must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-32 Company admin shouldn't be able to register without nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "74663c5d-5efd-4dcd-b9fb-38440b639170",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without nid.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-33 Company admin shouldn't be able to register without nid and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3eb1973a-aee9-48af-97a7-934b799afd7f",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without nid and designation.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"nid must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\",\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-34 Company admin shouldn't be able to register without nid and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5987ebc8-1b38-4082-a8c2-37f35464c1e5",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without nid and department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"nid must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-35 Company admin shouldn't be able to register without designtion",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd86641c-734f-4dbf-95a5-cd6cbec3fc28",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without designation.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-36 Company admin shouldn't be able to register without designtion and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d67b2e6a-dbe2-4bd3-976c-a5c21f4b5b3c",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"designation must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"designation must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"designation must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without designation and department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"designation must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"designation must be non-empty\",\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				},
				{
					"name": "FFME2-14-37 Company admin shouldn't be able to register without  department ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45240cf2-1cd6-4b0b-b6a3-46a89c43d226",
								"exec": [
									"//Response time validation ",
									"",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//Status code validation ",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"//create variable for json data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Generating Schema ",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Schema Validtation Test",
									"",
									"pm.test('Schema Validation', function() {",
									"   ",
									"    var result=tv4.validateResult(pm.response.json(), schema);",
									" ",
									"    if(!result.valid){",
									"        console.log(result);",
									"    }",
									" ",
									"    pm.expect(result.valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin shouldn't be able to register without department.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": \"194\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"\"\n\n}\n\n\nExpected Result:\n{\n    \"message\": [\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nActual Result:\n{\n    \"message\": [\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\nStatus Code: 403 FORBIDDEN\nTest Result: Pass\n"
					},
					"response": []
				}
			],
			"description": "Objective: This folder will contain all negatove test scenarios realted to company admin creating register app user. \n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Rahman\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n\n\"phone_number\": \"2015891411\",\n\n\"company_id\": 194,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Niaz\",\n\n\"last_name\":\"Sarif\",\n\n\"nid\":\"12340987\",\n\n\"designation\":\"QA\",\n\n\"department\":\"Tech\"\n\n}\n\n\nExpected Result: If any related filed missing, it will throw error message.\n\nActual Result: User will see specific error that related to the field.\n\n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "aa5a5059-872f-40df-9bc9-1f3e6f343ecf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1452d4df-d065-4f99-9f1d-9c08743aed45",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8a3b7564-b94d-445b-909b-bce40c90275d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e414d822-8a3c-40b8-a431-b5da40b67237",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}